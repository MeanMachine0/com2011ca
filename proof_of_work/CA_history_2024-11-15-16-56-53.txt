2024-11-15-16-56-53 102 1 def within_cluster_distances(data: np.ndarray, labels: np.ndarray) -> np.ndarray:	    num_samples = data.shape[0]	    within_distances = np.zeros((num_samples,))	    np.where(labels)	    for result_ind, data_point, cluster_ind in enumerate(zip(data, labels)):	        other_points_in_cluster = np.where(data == cluster_ind and data != data_point)	        a_of_i_frac = 1 / len(other_points_in_cluster)	        a_of_i_sum = 0	        for other_data_point in other_points_in_cluster:	            a_of_i_sum += (sum((i - j) ** 2 for i, j in zip(data_point, other_data_point))) ** 0.5	        a_of_i = a_of_i_frac * a_of_i_sum	        within_distances[result_ind] = a_of_i	    return within_distances		save_history()
2024-11-15-16-56-53 102 2 get_ipython().run_line_magic('matplotlib', 'inline')	import matplotlib.pyplot as plt	from typing import Tuple	import numpy as np	import scipy as sp	from submission_utils import save_history, check_and_prepare_for_submission	# import warnings filter	from warnings import simplefilter	# ignore all future warnings	simplefilter(action='ignore', category=FutureWarning)
